pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    version: '3.0.x'

- script: dotnet --info
  displayName: 'Display .NET Core information'

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: build
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests'
  inputs:
    command: test
    projects: 'test/*.Tests/*.Tests.csproj'
    arguments: '--no-build --configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Create NuGet packages'
  inputs:
    command: pack
    projects: 'src/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Publish NuGet packages to Azure Artifacts'
  inputs:
    command: push
    publishVstsFeed: 'Moniker'

- task: NuGetAuthenticate@0
  displayName: 'Authenticate to the NuGet.org feed'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    nuGetServiceConnections: NuGet

- task: DotNetCoreCLI@2
  displayName: 'Publish NuGet packages to NuGet.org'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    command: push
    nugetFeedType: external
    externalEndPoint: 'NuGet'